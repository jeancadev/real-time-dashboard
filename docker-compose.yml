version: "3.9"
services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: dashboard_backend
    ports:
      - "5000:5000"
    environment:
      FLASK_ENV: production
      # Se puede agregar otras variables de entorno aqu√≠, incluidas las claves sensibles
      # OPENWEATHER_API_KEY, SECRET_KEY, etc.
      OPENWEATHER_API_KEY: "fd17340b9139c6e35b3e4561824d81aa"
      SECRET_KEY: "CLAVE_SECRETA_1234"
      DATABASE_URL: sqlite:///app.db
      REDIS_URL: redis://redis:6379/0
    volumes:
      - ./backend/instance:/app/instance  # Para persistir la base de datos
    depends_on:
      - prometheus
      - redis
    restart: unless-stopped
    networks:
      - app-network
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: dashboard_frontend
    ports:
      - "80:80"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      NODE_ENV: development
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - app-network
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    restart: unless-stopped
    networks:
      - app-network
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3001:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
    environment:
      GF_SECURITY_ADMIN_PASSWORD: secret
      GF_USERS_ALLOW_SIGN_UP: false
    restart: unless-stopped
    networks:
      - app-network
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  prometheus_data:
  grafana_data:
  redis_data:
